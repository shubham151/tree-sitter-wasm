(program (import_statement (import_clause (named_imports (import_specifier name: (identifier)))) source: (string (string_fragment))) (import_statement (import_clause (named_imports (import_specifier name: (identifier)) (import_specifier name: (identifier)) (import_specifier name: (identifier)))) source: (string (string_fragment))) (function_declaration name: (identifier) parameters: (formal_parameters (required_parameter pattern: (identifier) type: (type_annotation (type_identifier))) (required_parameter pattern: (identifier) type: (type_annotation (predefined_type)))) return_type: (type_annotation (type_identifier)) body: (statement_block (lexical_declaration (variable_declarator name: (identifier) value: (member_expression object: (identifier) property: (property_identifier)))) (lexical_declaration (variable_declarator name: (identifier) value: (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (identifier))))) (lexical_declaration (variable_declarator name: (identifier) value: (member_expression object: (identifier) property: (property_identifier)))) (return_statement (object (shorthand_property_identifier) (shorthand_property_identifier) (shorthand_property_identifier) (shorthand_property_identifier))))) (function_declaration name: (identifier) parameters: (formal_parameters (required_parameter pattern: (identifier) type: (type_annotation (predefined_type))) (required_parameter pattern: (identifier) type: (type_annotation (predefined_type)) value: (string))) return_type: (type_annotation (type_identifier)) body: (statement_block (lexical_declaration (variable_declarator name: (identifier) value: (identifier))) (lexical_declaration (variable_declarator name: (identifier) value: (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (identifier))))) (lexical_declaration (variable_declarator name: (identifier) value: (member_expression object: (identifier) property: (property_identifier)))) (return_statement (object (shorthand_property_identifier) (shorthand_property_identifier) (shorthand_property_identifier) (shorthand_property_identifier))))) (function_declaration name: (identifier) parameters: (formal_parameters (required_parameter pattern: (identifier) type: (type_annotation (type_identifier))) (required_parameter pattern: (identifier) type: (type_annotation (predefined_type)))) return_type: (type_annotation (type_identifier)) body: (statement_block (lexical_declaration (variable_declarator name: (object_pattern (shorthand_property_identifier_pattern) (shorthand_property_identifier_pattern)) value: (identifier))) (lexical_declaration (variable_declarator name: (identifier) value: (subscript_expression object: (identifier) index: (member_expression object: (identifier) property: (property_identifier))))) (lexical_declaration (variable_declarator name: (identifier) value: (call_expression function: (member_expression object: (member_expression object: (identifier) property: (property_identifier)) property: (property_identifier)) arguments: (arguments (number) (member_expression object: (identifier) property: (property_identifier)))))) (lexical_declaration (variable_declarator name: (identifier) value: (call_expression function: (member_expression object: (member_expression object: (identifier) property: (property_identifier)) property: (property_identifier)) arguments: (arguments (member_expression object: (identifier) property: (property_identifier)))))) (lexical_declaration (variable_declarator name: (identifier) value: (binary_expression left: (binary_expression left: (identifier) right: (identifier)) right: (identifier)))) (expression_statement (assignment_expression left: (subscript_expression object: (identifier) index: (member_expression object: (identifier) property: (property_identifier))) right: (call_expression function: (identifier) arguments: (arguments (identifier) (identifier))))) (lexical_declaration (variable_declarator name: (object_pattern (shorthand_property_identifier_pattern)) value: (identifier))) (lexical_declaration (variable_declarator name: (identifier) value: (binary_expression left: (member_expression object: (identifier) property: (property_identifier)) right: (number)))) (lexical_declaration (variable_declarator name: (identifier) value: (object (shorthand_property_identifier) (pair key: (property_identifier) value: (object (shorthand_property_identifier) (shorthand_property_identifier)))))) (return_statement (identifier)))) (function_declaration name: (identifier) parameters: (formal_parameters (required_parameter pattern: (identifier) type: (type_annotation (type_identifier)))) return_type: (type_annotation (type_identifier)) body: (statement_block (lexical_declaration (variable_declarator name: (object_pattern (shorthand_property_identifier_pattern) (shorthand_property_identifier_pattern)) value: (identifier))) (lexical_declaration (variable_declarator name: (identifier) value: (subscript_expression object: (identifier) index: (member_expression object: (identifier) property: (property_identifier))))) (lexical_declaration (variable_declarator name: (identifier) value: (call_expression function: (member_expression object: (member_expression object: (identifier) property: (property_identifier)) property: (property_identifier)) arguments: (arguments (number) (member_expression object: (identifier) property: (property_identifier)))))) (expression_statement (assignment_expression left: (subscript_expression object: (identifier) index: (member_expression object: (identifier) property: (property_identifier))) right: (call_expression function: (identifier) arguments: (arguments (identifier) (identifier))))) (lexical_declaration (variable_declarator name: (identifier) value: (call_expression function: (member_expression object: (member_expression object: (identifier) property: (property_identifier)) property: (property_identifier)) arguments: (arguments (member_expression object: (identifier) property: (property_identifier)))))) (lexical_declaration (variable_declarator name: (identifier) value: (call_expression function: (identifier) arguments: (arguments (member_expression object: (identifier) property: (property_identifier)) (identifier))))) (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (binary_expression left: (member_expression object: (identifier) property: (property_identifier)) right: (number)) (number) (identifier)))) (lexical_declaration (variable_declarator name: (identifier) value: (binary_expression left: (member_expression object: (identifier) property: (property_identifier)) right: (number)))) (lexical_declaration (variable_declarator name: (identifier) value: (number))) (lexical_declaration (variable_declarator name: (identifier) value: (binary_expression left: (member_expression object: (identifier) property: (property_identifier)) right: (number)))) (lexical_declaration (variable_declarator name: (identifier) value: (object (shorthand_property_identifier) (pair key: (property_identifier) value: (object (shorthand_property_identifier) (shorthand_property_identifier))) (shorthand_property_identifier)))) (return_statement (identifier)))) (function_declaration name: (identifier) parameters: (formal_parameters (required_parameter pattern: (identifier) type: (type_annotation (type_identifier)))) return_type: (type_annotation (type_identifier)) body: (statement_block (lexical_declaration (variable_declarator name: (object_pattern (shorthand_property_identifier_pattern) (shorthand_property_identifier_pattern)) value: (identifier))) (lexical_declaration (variable_declarator name: (identifier) value: (call_expression function: (identifier) arguments: (arguments (member_expression object: (identifier) property: (property_identifier)))))) (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (binary_expression left: (member_expression object: (identifier) property: (property_identifier)) right: (number)) (number) (identifier)))) (lexical_declaration (variable_declarator name: (identifier) value: (binary_expression left: (member_expression object: (identifier) property: (property_identifier)) right: (number)))) (lexical_declaration (variable_declarator name: (identifier) value: (number))) (lexical_declaration (variable_declarator name: (identifier) value: (binary_expression left: (member_expression object: (identifier) property: (property_identifier)) right: (number)))) (lexical_declaration (variable_declarator name: (identifier) value: (object (shorthand_property_identifier) (pair key: (property_identifier) value: (object (shorthand_property_identifier) (shorthand_property_identifier))) (shorthand_property_identifier)))) (return_statement (identifier)))) (function_declaration name: (identifier) parameters: (formal_parameters (required_parameter pattern: (identifier) type: (type_annotation (type_identifier)))) return_type: (type_annotation (type_identifier)) body: (statement_block (lexical_declaration (variable_declarator name: (object_pattern (shorthand_property_identifier_pattern) (shorthand_property_identifier_pattern)) value: (identifier))) (if_statement condition: (parenthesized_expression (binary_expression left: (member_expression object: (identifier) property: (property_identifier)) right: (number))) consequence: (statement_block (lexical_declaration (variable_declarator name: (identifier) value: (subscript_expression object: (identifier) index: (member_expression object: (identifier) property: (property_identifier))))) (lexical_declaration (variable_declarator name: (identifier) value: (binary_expression left: (call_expression function: (member_expression object: (member_expression object: (identifier) property: (property_identifier)) property: (property_identifier)) arguments: (arguments (number) (binary_expression left: (member_expression object: (identifier) property: (property_identifier)) right: (number)))) right: (call_expression function: (member_expression object: (member_expression object: (identifier) property: (property_identifier)) property: (property_identifier)) arguments: (arguments (member_expression object: (identifier) property: (property_identifier))))))) (expression_statement (assignment_expression left: (subscript_expression object: (identifier) index: (member_expression object: (identifier) property: (property_identifier))) right: (call_expression function: (identifier) arguments: (arguments (identifier) (identifier))))) (lexical_declaration (variable_declarator name: (object_pattern (shorthand_property_identifier_pattern)) value: (identifier))) (lexical_declaration (variable_declarator name: (identifier) value: (binary_expression left: (member_expression object: (identifier) property: (property_identifier)) right: (number)))) (lexical_declaration (variable_declarator name: (identifier) value: (object (shorthand_property_identifier) (pair key: (property_identifier) value: (object (shorthand_property_identifier) (shorthand_property_identifier)))))) (return_statement (identifier))) alternative: (else_clause (if_statement condition: (parenthesized_expression (binary_expression left: (member_expression object: (identifier) property: (property_identifier)) right: (number))) consequence: (statement_block (lexical_declaration (variable_declarator name: (identifier) value: (subscript_expression object: (identifier) index: (binary_expression left: (member_expression object: (identifier) property: (property_identifier)) right: (number))))) (lexical_declaration (variable_declarator name: (identifier) value: (subscript_expression object: (identifier) index: (member_expression object: (identifier) property: (property_identifier))))) (lexical_declaration (variable_declarator name: (identifier) value: (binary_expression left: (member_expression object: (identifier) property: (property_identifier)) right: (member_expression object: (identifier) property: (property_identifier))))) (expression_statement (assignment_expression left: (subscript_expression object: (identifier) index: (binary_expression left: (member_expression object: (identifier) property: (property_identifier)) right: (number))) right: (call_expression function: (identifier) arguments: (arguments (identifier) (identifier))))) (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (member_expression object: (identifier) property: (property_identifier)) (number)))) (lexical_declaration (variable_declarator name: (identifier) value: (binary_expression left: (member_expression object: (identifier) property: (property_identifier)) right: (number)))) (lexical_declaration (variable_declarator name: (identifier) value: (member_expression object: (identifier) property: (property_identifier)))) (lexical_declaration (variable_declarator name: (identifier) value: (object (shorthand_property_identifier) (pair key: (property_identifier) value: (object (shorthand_property_identifier) (shorthand_property_identifier)))))) (return_statement (identifier)))))))) (function_declaration name: (identifier) parameters: (formal_parameters (required_parameter pattern: (identifier) type: (type_annotation (type_identifier)))) return_type: (type_annotation (type_identifier)) body: (statement_block (lexical_declaration (variable_declarator name: (object_pattern (shorthand_property_identifier_pattern) (shorthand_property_identifier_pattern)) value: (identifier))) (lexical_declaration (variable_declarator name: (identifier) value: (subscript_expression object: (identifier) index: (member_expression object: (identifier) property: (property_identifier))))) (lexical_declaration (variable_declarator name: (identifier) value: (binary_expression left: (call_expression function: (member_expression object: (member_expression object: (identifier) property: (property_identifier)) property: (property_identifier)) arguments: (arguments (number) (member_expression object: (identifier) property: (property_identifier)))) right: (call_expression function: (member_expression object: (member_expression object: (identifier) property: (property_identifier)) property: (property_identifier)) arguments: (arguments (binary_expression left: (member_expression object: (identifier) property: (property_identifier)) right: (number))))))) (expression_statement (assignment_expression left: (subscript_expression object: (identifier) index: (member_expression object: (identifier) property: (property_identifier))) right: (call_expression function: (identifier) arguments: (arguments (identifier) (identifier))))) (return_statement (object (shorthand_property_identifier))))) (function_declaration name: (identifier) parameters: (formal_parameters (required_parameter pattern: (identifier) type: (type_annotation (type_identifier)))) return_type: (type_annotation (type_identifier)) body: (statement_block (lexical_declaration (variable_declarator name: (object_pattern (shorthand_property_identifier_pattern) (shorthand_property_identifier_pattern)) value: (identifier))) (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (member_expression object: (identifier) property: (property_identifier)) (number)))) (return_statement (object (shorthand_property_identifier))))) (function_declaration name: (identifier) parameters: (formal_parameters (required_parameter pattern: (identifier) type: (type_annotation (type_identifier)))) return_type: (type_annotation (type_identifier)) body: (statement_block (lexical_declaration (variable_declarator name: (object_pattern (shorthand_property_identifier_pattern) (shorthand_property_identifier_pattern)) value: (identifier))) (lexical_declaration (variable_declarator name: (identifier) value: (subscript_expression object: (identifier) index: (member_expression object: (identifier) property: (property_identifier))))) (lexical_declaration (variable_declarator name: (identifier) value: (member_expression object: (identifier) property: (property_identifier)))) (return_statement (object (shorthand_property_identifier))))) (function_declaration name: (identifier) parameters: (formal_parameters (required_parameter pattern: (identifier) type: (type_annotation (type_identifier)))) return_type: (type_annotation (type_identifier)) body: (statement_block (lexical_declaration (variable_declarator name: (object_pattern (shorthand_property_identifier_pattern) (shorthand_property_identifier_pattern) (shorthand_property_identifier_pattern)) value: (identifier))) (lexical_declaration (variable_declarator name: (identifier) value: (call_expression function: (identifier) arguments: (arguments (member_expression object: (identifier) property: (property_identifier)) (identifier))))) (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (binary_expression left: (member_expression object: (identifier) property: (property_identifier)) right: (number)) (number) (identifier)))) (lexical_declaration (variable_declarator name: (identifier) value: (binary_expression left: (member_expression object: (identifier) property: (property_identifier)) right: (number)))) (lexical_declaration (variable_declarator name: (object_pattern (shorthand_property_identifier_pattern)) value: (identifier))) (lexical_declaration (variable_declarator name: (identifier) value: (binary_expression left: (member_expression object: (identifier) property: (property_identifier)) right: (number)))) (return_statement (object (shorthand_property_identifier) (pair key: (property_identifier) value: (object (shorthand_property_identifier) (shorthand_property_identifier))) (shorthand_property_identifier))))) (export_statement declaration: (lexical_declaration (variable_declarator name: (identifier) value: (object (shorthand_property_identifier) (shorthand_property_identifier) (shorthand_property_identifier) (shorthand_property_identifier) (shorthand_property_identifier) (shorthand_property_identifier) (shorthand_property_identifier) (shorthand_property_identifier))))))